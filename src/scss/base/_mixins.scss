/**
 * Helper mixins
*/

// Clearfix
// http://www.cssmojo.com/latest_new_clearfix_so_far/
// Other clearfix options: https://github.com/stubbornella/oocss/blob/master/oocss/src/components/utils/_clearfix-me.scss
@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

// Text selection
@mixin text-selection($color-selection, $color-selection-bg) {
  ::-moz-selection {
    // sass-lint:disable-line no-vendor-prefixes
    background: $color-selection-bg;
    color: $color-selection;
    text-shadow: none;
  }
  ::selection {
    background: $color-selection-bg;
    color: $color-selection;
    text-shadow: none;
  }
}

@mixin no-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

//Placeholders
//Usage:
//@include placeholder;
@mixin placeholder {
  // sass-lint:disable no-vendor-prefixes
  ::-webkit-input-placeholder {
    @content
  }
  :-moz-placeholder {
    @content
  }
  ::-moz-placeholder {
    @content
  }
  :-ms-input-placeholder {
    @content
  }
}

@mixin text-stroke($fill, $stroke, $width, $fallback) {
  @supports ((-webkit-text-stroke-color: $stroke) and (-webkit-text-fill-color: $fill)) or ((-moz-text-stroke-color: $stroke) and (-moz-text-fill-color: $fill)) {
    -moz-text-fill-color: $fill;
    -webkit-text-fill-color: $fill;
    -moz-text-stroke-color: $stroke;
    -webkit-text-stroke-color: $stroke;
    -moz-text-stroke-width: $width;
    -webkit-text-stroke-width: $width;
  }
  color: $fallback;
}

// For each breakpoint, define the margin top in a media query
@mixin make-margin-tops($margin-tops, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $margin-top in $margin-tops {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      margin-top: $margin-top;
    }
  }
}

// For each breakpoint, define the margin top in a media query
@mixin make-paddings($paddings, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $padding in $paddings {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      padding: $padding;
    }
  }
}

@mixin fix-inline-block-spacing {
  font-size: 0; /* Fix the inline-block spacing */
}

// =============================================================================
// String Replace
// =============================================================================

@function str-replace($string, $search, $replace: "") {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}

// =============================================================================
// Font Face
// =============================================================================

@mixin font-face($name, $path, $weight: null, $style: null, $exts: eot woff2 woff ttf svg) {
	$src: null;

	$extmods: (
		eot: "?",
		svg: "#" + str-replace($name, " ", "_")
	);

	$formats: (
		otf: "opentype",
		ttf: "truetype"
	);

	@each $ext in $exts {
		$extmod: if(map-has-key($extmods, $ext), $ext + map-get($extmods, $ext), $ext);
		$format: if(map-has-key($formats, $ext), map-get($formats, $ext), $ext);
		$src: append($src, url(quote($path + "." + $extmod)) format(quote($format)), comma);
	}

	@font-face {
		font-family: quote($name);
		font-style: $style;
		font-weight: $weight;
		src: $src;
	}
}

@mixin margin-top-bottom($margin) {
  margin: $margin auto;
}